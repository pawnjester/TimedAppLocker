ext {
    kotlinVersion = "1.3.72"
    roomDBVersion = "2.3.0-alpha02"
    androidKTxVersion = "1.3.2"
    lottieVersion = "2.8.0"
    daggerHiltVersion = "1.0.0-alpha02"
    daggerCompilerVersion = "2.28.3-alpha"
    navigationVersion = "2.3.2"
    fragmentVersion = "1.3.0-beta02"
    recyclerVersion = "1.2.0-beta01"
    jodaVersion = "2.10.3"
    javaInjectVersion = "1"
    jUnitVersion = "4.12"
    espressoVersion = "3.2.0"
    jUniXVersion = "1.1.2"
    materialVersion = "1.2.1"
    constraintLayoutVersion = "2.0.4"
    legacyVersion = "1.0.0"
    appCompatVersion = "1.2.0"
    compileSdkVersion = 30
    minSdkVersion = 21
    targetSdkVersion = 30
    versionCode = 1
    versionName = "1.0"
    buildToolsVersion = "30.0.2"
    androidLifecycleViewModel = "2.3.0-beta01"
    coroutinesVersion = "1.4.2"
    applicationId = "com.example.timedapplocker"
    testRunnerVersion = "1.3.0"
    roboelectricVersion = "4.4"
    testExt = "1.1.2"
    testCore = "1.3.0"
    truthVersion = "1.0.1"
    archCoreTest = "1.1.1"
    rules = "1.2.0"
    mockitoVersion = "2.2.0"
    lifecycleVersion = "2.2.0"


    roomDependencies = [
            roomDB      : "androidx.room:room-ktx:${roomDBVersion}",
            roomCompiler: "androidx.room:room-compiler:${roomDBVersion}",
            roomRuntime : "androidx.room:room-runtime:${roomDBVersion}"
    ]

    appDependencies = [
            kotlin             : "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}",
            androidKtx         : "androidx.core:core-ktx:${androidKTxVersion}",
            lottie             : "com.airbnb.android:lottie:${lottieVersion}",
            daggerHiltViewModel: "androidx.hilt:hilt-lifecycle-viewmodel:${daggerHiltVersion}",
            daggerHiltAndroid  : "com.google.dagger:hilt-android:${daggerCompilerVersion}",
            daggerCompiler     : "androidx.hilt:hilt-compiler:${daggerHiltVersion}",
            daggerXcompiler    : "com.google.dagger:hilt-android-compiler:${daggerCompilerVersion}",
            javax              : "javax.inject:javax.inject:${javaInjectVersion}",
            androidXViewModel  : "androidx.lifecycle:lifecycle-viewmodel-ktx:${androidLifecycleViewModel}",
            coroutines         : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesVersion}"
    ]

    uiDependencies = [
            material          : "com.google.android.material:material:${materialVersion}",
            navigationFragment: "androidx.navigation:navigation-fragment-ktx:${navigationVersion}",
            navigationUI      : "androidx.navigation:navigation-ui-ktx:${navigationVersion}",
            fragment          : "androidx.fragment:fragment-ktx:${fragmentVersion}",
            recyclerView      : "androidx.recyclerview:recyclerview:${recyclerVersion}",
            jodaTime          : "net.danlew:android.joda:${jodaVersion}",
            constraintLayout  : "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
            androidLegacy     : "androidx.legacy:legacy-support-v4:${legacyVersion}",
            appCompat         : "androidx.appcompat:appcompat:${appCompatVersion}",
            liveData          : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    ]

    testDependencies = [
            jUnit           : "junit:junit:${jUnitVersion}",
            espresso        : "androidx.test.espresso:espresso-core:${espressoVersion}",
            jUnitX          : "androidx.test.ext:junit:${jUniXVersion}",
            espressoContrib : "androidx.test.espresso:espresso-contrib:${espressoVersion}",
            coroutinesTest  : "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutinesVersion}",
            testRunner      : "androidx.test:runner:${testRunnerVersion}",
            roboelectric    : "org.robolectric:robolectric:${roboelectricVersion}",
            androidXTest    : "androidx.test.ext:junit:${testExt}",
            androidXTestCore: "androidx.test:core:${testCore}",
            truth           : "com.google.truth:truth:${truthVersion}",
            archCoreTest    : "android.arch.core:core-testing:${archCoreTest}",
            rules           : "androidx.test:rules:${rules}",
            fragmentTesting : "androidx.fragment:fragment-testing:${fragmentVersion}",
            hiltTesting     : "com.google.dagger:hilt-android-testing:${daggerCompilerVersion}",
            mockitoKotlin   : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoVersion}"
    ]
}